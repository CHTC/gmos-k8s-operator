apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .ObjectMeta.Name }}
  namespace: {{ .ObjectMeta.Namespace }}
  {{ if .RemoteManifest }}
  labels:
    gmos.chtc.wisc.edu/git-hash: "{{ .RemoteManifest.CurrentCommit }}"
  {{ end }}
spec:
  replicas: {{ .Spec.Size }}
  selector:
    matchLabels:
      app.kubernetes.io/created-by: controller-manager
      app.kubernetes.io/instance: {{ .ObjectMeta.Name }}
      app.kubernetes.io/name: GlideinSetCollection
      gmos.chtc.wisc.edu/app: pilot
  template:
    metadata:
      labels:
        app.kubernetes.io/created-by: controller-manager
        app.kubernetes.io/instance: {{.ObjectMeta.Name}}
        app.kubernetes.io/name: GlideinSetCollection
        gmos.chtc.wisc.edu/app: pilot
    spec:
      containers:
      # Main glidein container
      - name: backfill
        {{ if .RemoteManifest }}

        {{ if .RemoteManifest.Command }}
        command:
          {{ .RemoteManifest.Command | toYaml | nindent 10 }}
        {{ end }}
        env:
          {{ .RemoteManifest.Env | toYaml | nindent 10 }}
        image: {{ .RemoteManifest.Image }}
        imagePullPolicy: Always

        {{ if .Spec.SecurityContext }}
        securityContext:
          {{ .Spec.SecurityContext | toYaml | nindent 10 }}
        {{ end }}

        {{ else }}

        # Default image for an unconfigured glidein
        image: alpine:latest
        command:
        - sleep
        - infinity
        
        {{ end }}
        resources:
          {{ .Spec.Resources | toYaml | nindent 10}}
        volumeMounts:
        {{ if .RemoteManifest }}
        - mountPath: {{ .RemoteManifest.Volume.Dst }}
          name: gmos-data
        - mountPath: {{ .RemoteManifest.SecretSource.DstDir }}
          name: gmos-secrets
        {{ else }}
        - mountPath: /etc/condor/tokens-orig.d/
          name: gmos-secrets
        {{ end }}
        - mountPath: /mnt/collector-tokens
          name: collector-tokens
        - mountPath: /pilot
          name: pilot-volume
      
      # Sidecar container that forwards glidein logs
      - name: logging-agent
        image: hub.opensciencegrid.org/mwestphall/fluentd
        volumeMounts:
        - mountPath: /pilot
          name: pilot-volume
        - mountPath: /fluentd/etc
          name: fluentd-config

      priorityClassName: {{ .Spec.PriorityClassName }}
      restartPolicy: Always
      # Security config
      {{ if .RemoteManifest }}
      securityContext:
        fsGroup: {{ .RemoteManifest.Security.Group }}
        runAsGroup: {{ .RemoteManifest.Security.Group }}
        runAsNonRoot: true
        runAsUser: {{ .RemoteManifest.Security.User }}
      {{ end }}
      # Tolerations/NodeSelector supplied directly by parent
      tolerations:
        {{ .Spec.Tolerations | toYaml | nindent 8 }}
      nodeSelector:
        {{ .Spec.NodeSelector | toYaml | nindent 8 }}
      volumes:
      # Secret containing config file data supplied from upstream git config
      - name: gmos-data
        secret:
          defaultMode: 420
          secretName: '{{.ObjectMeta.Name}}-data'
      # Secret containing auth tokens supplied by upstream glidein manager
      - name: gmos-secrets
        secret:
          defaultMode: 420
          secretName: '{{.ObjectMeta.Name}}-tokens'
      # Secret containing IDTokens supplied by the namespace-local collector
      - name: collector-tokens
        secret:
          defaultMode: 420
          secretName: '{{.ObjectMeta.Name}}-collector-tokens'
      # Logging Config
      - name: fluentd-config
        configMap:
          name: '{{.ObjectMeta.Name}}-fluentd-cfg'
      - name: pilot-volume
        emptyDir: {}
      
